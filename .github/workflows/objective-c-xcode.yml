name: Xcode Build & Analyze

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Build & Analyze SwiftUI Project
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Find scheme automatically
        id: scheme
        run: |
          SCHEME=""
          # Перевірка на workspace
          if [ "$(ls -A | grep -i '\.xcworkspace$')" ]; then
            WORKSPACE=$(ls -A | grep -i '\.xcworkspace$')
            SCHEME=$(xcodebuild -workspace "$WORKSPACE" -list -json | ruby -e "
require 'json'
data = JSON.parse(STDIN.gets)
puts data['workspace']['schemes'][0]
")
          # Інакше project
          elif [ "$(ls -A | grep -i '\.xcodeproj$')" ]; then
            PROJECT=$(ls -A | grep -i '\.xcodeproj$')
            SCHEME=$(xcodebuild -project "$PROJECT" -list -json | ruby -e "
require 'json'
data = JSON.parse(STDIN.gets)
puts data['project']['targets'][0]
")
          else
            echo "No workspace or project found" && exit 1
          fi
          echo "scheme=$SCHEME" >> $GITHUB_ENV
          echo "Using scheme: $SCHEME"

      - name: Build & Analyze
        run: |
          # Визначаємо файл для збірки
          if [ "$(ls -A | grep -i '\.xcworkspace$')" ]; then
            FILE_TO_BUILD=$(ls -A | grep -i '\.xcworkspace$')
            FILE_TYPE="workspace"
          else
            FILE_TO_BUILD=$(ls -A | grep -i '\.xcodeproj$')
            FILE_TYPE="project"
          fi
          FILE_TO_BUILD=$(echo $FILE_TO_BUILD | awk '{$1=$1;print}')

          # Збираємо проект під macOS 11+ для SwiftUI
          xcodebuild clean build analyze \
            -"$FILE_TYPE" "$FILE_TO_BUILD" \
            -scheme "$scheme" \
            MACOSX_DEPLOYMENT_TARGET=11.0 | xcpretty && exit ${PIPESTATUS[0]}
