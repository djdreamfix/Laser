name: Xcode - Build and Analyze

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Build and analyse default scheme using xcodebuild command
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set Default Scheme
        run: |
          # Отримуємо список схем і таргетів
          scheme_list=$(xcodebuild -list -json | tr -d "\n")
          
          # Ruby-скрипт для отримання першого scheme/target
          default=$(echo $scheme_list | ruby -e "
require 'json'
data = JSON.parse(STDIN.gets)
if data['project']
  puts data['project']['targets'][0]
elsif data['workspace']
  puts data['workspace']['schemes'][0]
else
  abort('No scheme or target found')
end
")
          echo $default | cat > default
          echo Using default scheme: $default

      - name: Build
        env:
          scheme: ${{ 'default' }}
        run: |
          if [ $scheme = default ]; then scheme=$(cat default); fi
          # Визначаємо project або workspace
          if [ "`ls -A | grep -i \\.xcworkspace\$`" ]; then
            filetype_parameter="workspace"
            file_to_build="`ls -A | grep -i \\.xcworkspace\$`"
          else
            filetype_parameter="project"
            file_to_build="`ls -A | grep -i \\.xcodeproj\$`"
          fi
          file_to_build=`echo $file_to_build | awk '{$1=$1;print}'`
          xcodebuild clean build analyze -scheme "$scheme" -"$filetype_parameter" "$file_to_build" | xcpretty && exit ${PIPESTATUS[0]}
